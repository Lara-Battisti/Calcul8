/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.calcul8;

import java.util.Scanner;

/**
 *
 * @author Lara Battisti
 */
public class Calcul8 extends javax.swing.JFrame {

    /**
     * Creates new form Calcul8
     */
    
    //class variables
    private boolean mode;
    private boolean degree;

    private String input;
    private String output;

    private double result;
    private double num1;
    private double num2;
    
    public Calcul8() {
        initComponents();
        
        mode = false;
        degree = false;

        input = "";
        output = "";

        textArea.setEditable(false);
        //panel.setBackground(Color.RED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton37 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        button_mode = new javax.swing.JButton();
        button_aSin = new javax.swing.JButton();
        button_sin = new javax.swing.JButton();
        button_sqrt = new javax.swing.JButton();
        button_seven = new javax.swing.JButton();
        button_four = new javax.swing.JButton();
        button_one = new javax.swing.JButton();
        button_zero = new javax.swing.JButton();
        button_abs = new javax.swing.JButton();
        button_aCos = new javax.swing.JButton();
        button_cos = new javax.swing.JButton();
        button_openP = new javax.swing.JButton();
        button_eight = new javax.swing.JButton();
        button_five = new javax.swing.JButton();
        button_two = new javax.swing.JButton();
        button_dot = new javax.swing.JButton();
        button_del = new javax.swing.JButton();
        button_aTan = new javax.swing.JButton();
        button_tan = new javax.swing.JButton();
        button_closeP = new javax.swing.JButton();
        button_nine = new javax.swing.JButton();
        button_six = new javax.swing.JButton();
        button_three = new javax.swing.JButton();
        button_pi = new javax.swing.JButton();
        button_clear = new javax.swing.JButton();
        button_pow = new javax.swing.JButton();
        button_mod = new javax.swing.JButton();
        button_div = new javax.swing.JButton();
        button_mult = new javax.swing.JButton();
        button_min = new javax.swing.JButton();
        button_add = new javax.swing.JButton();
        button_enter = new javax.swing.JButton();

        jButton37.setText("Abs");
        jButton37.setMaximumSize(new java.awt.Dimension(57, 21));
        jButton37.setMinimumSize(new java.awt.Dimension(57, 21));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(336, 568));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Calcul8");

        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.setPreferredSize(new java.awt.Dimension(184, 69));
        jScrollPane1.setViewportView(textArea);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        button_mode.setText("Mode");
        button_mode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_mode.setRolloverEnabled(false);
        button_mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_modeActionPerformed(evt);
            }
        });

        button_aSin.setText("ArcSin");
        button_aSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_aSinActionPerformed(evt);
            }
        });

        button_sin.setText("Sin");
        button_sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sinActionPerformed(evt);
            }
        });

        button_sqrt.setText("Sqrt");
        button_sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sqrtActionPerformed(evt);
            }
        });

        button_seven.setText("7");
        button_seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sevenActionPerformed(evt);
            }
        });

        button_four.setText("4");
        button_four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_fourActionPerformed(evt);
            }
        });

        button_one.setText("1");
        button_one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_oneActionPerformed(evt);
            }
        });

        button_zero.setText("0");
        button_zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_zeroActionPerformed(evt);
            }
        });

        button_abs.setText("Abs");
        button_abs.setRolloverEnabled(false);
        button_abs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_absActionPerformed(evt);
            }
        });

        button_aCos.setText("ArcCos");
        button_aCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_aCosActionPerformed(evt);
            }
        });

        button_cos.setText("Cos");
        button_cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cosActionPerformed(evt);
            }
        });

        button_openP.setText("(");
        button_openP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_openPActionPerformed(evt);
            }
        });

        button_eight.setText("8");
        button_eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_eightActionPerformed(evt);
            }
        });

        button_five.setText("5");
        button_five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_fiveActionPerformed(evt);
            }
        });

        button_two.setText("2");
        button_two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_twoActionPerformed(evt);
            }
        });

        button_dot.setText(".");
        button_dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_dotActionPerformed(evt);
            }
        });

        button_del.setText("Del");
        button_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_delActionPerformed(evt);
            }
        });

        button_aTan.setText("ArcTan");
        button_aTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_aTanActionPerformed(evt);
            }
        });

        button_tan.setText("Tan");
        button_tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_tanActionPerformed(evt);
            }
        });

        button_closeP.setText(")");
        button_closeP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_closePActionPerformed(evt);
            }
        });

        button_nine.setText("9");
        button_nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_nineActionPerformed(evt);
            }
        });

        button_six.setText("6");
        button_six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sixActionPerformed(evt);
            }
        });

        button_three.setText("3");
        button_three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_threeActionPerformed(evt);
            }
        });

        button_pi.setText("Pi");
        button_pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_piActionPerformed(evt);
            }
        });

        button_clear.setText("Clear");
        button_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_clearActionPerformed(evt);
            }
        });

        button_pow.setText("^");
        button_pow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_powActionPerformed(evt);
            }
        });

        button_mod.setText("%");
        button_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_modActionPerformed(evt);
            }
        });

        button_div.setText("/");
        button_div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_divActionPerformed(evt);
            }
        });

        button_mult.setText("x");
        button_mult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_multActionPerformed(evt);
            }
        });

        button_min.setText("-");
        button_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_minActionPerformed(evt);
            }
        });

        button_add.setText("+");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        button_enter.setText("Enter");
        button_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_enterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_aSin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_sin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_sqrt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_one, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_four, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_seven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_zero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_mode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(button_two, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_five, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_eight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_openP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_cos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(button_aCos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(button_abs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_dot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(button_three, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_six, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_nine, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_closeP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_tan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(button_aTan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(button_del, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_pi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_min, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_mult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_div, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_mod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_pow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(button_enter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(button_mode)
                .addGap(18, 18, 18)
                .addComponent(button_aSin)
                .addGap(18, 18, 18)
                .addComponent(button_sin)
                .addGap(18, 18, 18)
                .addComponent(button_sqrt)
                .addGap(18, 18, 18)
                .addComponent(button_seven)
                .addGap(18, 18, 18)
                .addComponent(button_four)
                .addGap(18, 18, 18)
                .addComponent(button_one)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(button_zero))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(button_abs)
                .addGap(18, 18, 18)
                .addComponent(button_aCos)
                .addGap(18, 18, 18)
                .addComponent(button_cos)
                .addGap(18, 18, 18)
                .addComponent(button_openP)
                .addGap(18, 18, 18)
                .addComponent(button_eight)
                .addGap(18, 18, 18)
                .addComponent(button_five)
                .addGap(18, 18, 18)
                .addComponent(button_two)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_dot))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(button_del)
                .addGap(18, 18, 18)
                .addComponent(button_aTan)
                .addGap(18, 18, 18)
                .addComponent(button_tan)
                .addGap(18, 18, 18)
                .addComponent(button_closeP)
                .addGap(18, 18, 18)
                .addComponent(button_nine)
                .addGap(18, 18, 18)
                .addComponent(button_six)
                .addGap(18, 18, 18)
                .addComponent(button_three)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_pi))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(button_clear)
                .addGap(18, 18, 18)
                .addComponent(button_pow)
                .addGap(18, 18, 18)
                .addComponent(button_mod)
                .addGap(18, 18, 18)
                .addComponent(button_div)
                .addGap(18, 18, 18)
                .addComponent(button_mult)
                .addGap(18, 18, 18)
                .addComponent(button_min)
                .addGap(18, 18, 18)
                .addComponent(button_add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_enter))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel1)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_modeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_modeActionPerformed
        // THIS IS MODE
        // Set's between degree and radian mode
        // if button is clicked then the mode variable is set to true
        // if it is true and button 1 or 2 is clicked
        // 1 makes it degree mode
        // 2 makes it radian mode

        mode = true;
        textArea.setText("click 1 for Degree or 2 for Radian");
        input = "";

    }//GEN-LAST:event_button_modeActionPerformed

    private void button_absActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_absActionPerformed
        // absolute value

        input += "|";

        textArea.setText(input);
    }//GEN-LAST:event_button_absActionPerformed

    private void button_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_delActionPerformed
        // Delete

        input = input.substring(0, input.length() - 1);
        textArea.setText(input);
    }//GEN-LAST:event_button_delActionPerformed

    private void button_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_clearActionPerformed
        // Clear

        input = "";
        textArea.setText(input);
    }//GEN-LAST:event_button_clearActionPerformed

    private void button_aSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_aSinActionPerformed
        // Arc Sin

        input += "Arcsin(";
        textArea.setText(input);
    }//GEN-LAST:event_button_aSinActionPerformed

    private void button_aCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_aCosActionPerformed
        // Arc Cos

        input += "Arccos(";
        textArea.setText(input);
    }//GEN-LAST:event_button_aCosActionPerformed

    private void button_aTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_aTanActionPerformed
        // Arc Tan

        input += "Arctan(";
        textArea.setText(input);
    }//GEN-LAST:event_button_aTanActionPerformed

    private void button_powActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_powActionPerformed
        // Power ^

        input += " ^ ";
        textArea.setText(input);
    }//GEN-LAST:event_button_powActionPerformed

    private void button_sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sinActionPerformed
        // Sin

        input += "Sin(";
        textArea.setText(input);
    }//GEN-LAST:event_button_sinActionPerformed

    private void button_cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cosActionPerformed
        // Cos

        input += "Cos(";
        textArea.setText(input);
    }//GEN-LAST:event_button_cosActionPerformed

    private void button_tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_tanActionPerformed
        // Tan

        input += "Tan(";
        textArea.setText(input);
    }//GEN-LAST:event_button_tanActionPerformed

    private void button_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_modActionPerformed
        // Mod %

        input += " % ";
        textArea.setText(input);
    }//GEN-LAST:event_button_modActionPerformed

    private void button_sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sqrtActionPerformed
        // Sqrt

        input += "Sqrt(";
        textArea.setText(input);
    }//GEN-LAST:event_button_sqrtActionPerformed

    private void button_openPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_openPActionPerformed
        // open parenthesese (

        input += "(";
        textArea.setText(input);
    }//GEN-LAST:event_button_openPActionPerformed

    private void button_closePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_closePActionPerformed
        // close parenthesese )

        input += ")";
        textArea.setText(input);
    }//GEN-LAST:event_button_closePActionPerformed

    private void button_divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_divActionPerformed
        // divide /

        input += " / ";
        textArea.setText(input);
    }//GEN-LAST:event_button_divActionPerformed

    private void button_sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sevenActionPerformed
        // seven

        input += "7";
        textArea.setText(input);
    }//GEN-LAST:event_button_sevenActionPerformed

    private void button_eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_eightActionPerformed
        // eight

        input += "8";
        textArea.setText(input);
    }//GEN-LAST:event_button_eightActionPerformed

    private void button_nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_nineActionPerformed
        // nine

        input += "9";
        textArea.setText(input);
    }//GEN-LAST:event_button_nineActionPerformed

    private void button_multActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_multActionPerformed
        // multiply *

        input += " * ";
        textArea.setText(input);
    }//GEN-LAST:event_button_multActionPerformed

    private void button_fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_fourActionPerformed
        // four

        input += "4";
        textArea.setText(input);
    }//GEN-LAST:event_button_fourActionPerformed

    private void button_fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_fiveActionPerformed
        // five

        input += "5";
        textArea.setText(input);
    }//GEN-LAST:event_button_fiveActionPerformed

    private void button_sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sixActionPerformed
        // six

        input += "6";
        textArea.setText(input);
    }//GEN-LAST:event_button_sixActionPerformed

    private void button_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_minActionPerformed
        // subtract -

        input += " - ";
        textArea.setText(input);
    }//GEN-LAST:event_button_minActionPerformed

    private void button_oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_oneActionPerformed
        // one

        if (mode) {
            textArea.setText("set to Degree");
            mode = false;
            degree = true;
        } else {
            input += "1";
            textArea.setText(input);
        }
    }//GEN-LAST:event_button_oneActionPerformed

    private void button_twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_twoActionPerformed
        // two

        if (mode) {
            textArea.setText("set to Radian");
            mode = false;
            degree = false;
        } else {
            input += "2";
            textArea.setText(input);
        }
    }//GEN-LAST:event_button_twoActionPerformed

    private void button_threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_threeActionPerformed
        // three

        input += "3";
        textArea.setText(input);
    }//GEN-LAST:event_button_threeActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        // add +

        input += " + ";
        textArea.setText(input);
    }//GEN-LAST:event_button_addActionPerformed

    private void button_zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_zeroActionPerformed
        // zero

        input += "0";
        textArea.setText(input);
    }//GEN-LAST:event_button_zeroActionPerformed

    private void button_dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_dotActionPerformed
        // dot period .

        input += ".";
        textArea.setText(input);
    }//GEN-LAST:event_button_dotActionPerformed

    private void button_piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_piActionPerformed
        // pi

        input += "Pi";
        textArea.setText(input);
    }//GEN-LAST:event_button_piActionPerformed

    private void button_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_enterActionPerformed
        // enter

        calculate();
        // now the output is set

        textArea.setText(input + "\n\n" + output);
    }//GEN-LAST:event_button_enterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calcul8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calcul8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calcul8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calcul8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calcul8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_aCos;
    private javax.swing.JButton button_aSin;
    private javax.swing.JButton button_aTan;
    private javax.swing.JButton button_abs;
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_clear;
    private javax.swing.JButton button_closeP;
    private javax.swing.JButton button_cos;
    private javax.swing.JButton button_del;
    private javax.swing.JButton button_div;
    private javax.swing.JButton button_dot;
    private javax.swing.JButton button_eight;
    private javax.swing.JButton button_enter;
    private javax.swing.JButton button_five;
    private javax.swing.JButton button_four;
    private javax.swing.JButton button_min;
    private javax.swing.JButton button_mod;
    private javax.swing.JButton button_mode;
    private javax.swing.JButton button_mult;
    private javax.swing.JButton button_nine;
    private javax.swing.JButton button_one;
    private javax.swing.JButton button_openP;
    private javax.swing.JButton button_pi;
    private javax.swing.JButton button_pow;
    private javax.swing.JButton button_seven;
    private javax.swing.JButton button_sin;
    private javax.swing.JButton button_six;
    private javax.swing.JButton button_sqrt;
    private javax.swing.JButton button_tan;
    private javax.swing.JButton button_three;
    private javax.swing.JButton button_two;
    private javax.swing.JButton button_zero;
    private javax.swing.JButton jButton37;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

    private void calculate() {
        // this goes through the string input to take it all apart
        // and then make it like a calculator
        // sets the Sting output as the answer of input

        // MAKE THE ACTUAL HOW TO FIND OUTPUT
        // What to find in order
        // parentheses
        // square root
        // trig
        // exponent
        // multiply
        // divide
        // add
        // subtract
        output = input;

        for (int i = 0; i < output.length(); i++) {

            //This if goes through to solve abolute value
            if (output.contains("|")) {
                int openAbs = output.indexOf("|");
                //System.out.println(openAbs + " open abs");
                int closeAbs = output.lastIndexOf("|");
                //System.out.println(closeAbs + " close abs");

                String insideAbs = output.substring(openAbs + 1, closeAbs);
                //System.out.println(insideAbs + " inside Abs");

                insideAbs = insideAbs.replaceAll("\\s", "");
                double inAbs = Double.parseDouble(insideAbs);
                //System.out.println(inAbs + " in abs");

                double absResult = absolute(inAbs);
                //System.out.println(absResult + " abs reults");
                output = output.substring(0, openAbs) + absResult + output.substring(closeAbs + 1);
                //System.out.println(output + " output");
            }

            //This if sees if there are parenthisese
            if (output.contains("(")) {
                int openParen = output.indexOf("(");
                int closeParen = output.indexOf(")");

                String insideParen = output.substring(openParen + 1, closeParen);

                double inParen = solveInside(insideParen);
                //System.out.println(inParen + " IN PAREN");

                output = output.substring(0, openParen + 1) + inParen + output.substring(closeParen);

                // Solves square root
                if (output.indexOf("Sqrt") >= 0) {

                    int closeSqrt = output.indexOf(")");
                    int openSqrt = output.indexOf("Sqrt(") + 5;
                    //System.out.println(openSqrt + " open Sqrt");
                    //System.out.println(closeSqrt + " close Sqrt");

                    String insideSqrt = output.substring(openSqrt, closeSqrt);
                    //System.out.println(insideSqrt + " inside Sqrt");

                    insideSqrt = insideSqrt.replaceAll("\\s", "");
                    double inSqrt = Double.parseDouble(insideSqrt);

                    double sqrtResult = squareRoot(inSqrt);
                    output = output.substring(0, output.indexOf("Sqrt")) + sqrtResult + output.substring(closeSqrt + 1);
                    //System.out.println(output + " output after sqrt");

                    //System.out.println(sqrtResult + " Sqrt result");
                }

                // Solves Sin
                if (output.indexOf("Sin") >= 0) {
                    int openSin = output.indexOf("Sin(") + 4;
                    int closeSin = output.indexOf(")");

                    String insideSin = output.substring(openSin, closeSin);

                    insideSin = insideSin.replaceAll("\\s", "");
                    double inSin = Double.parseDouble(insideSin);

                    double sinResult = sin(inSin);
                    output = output.substring(0, output.indexOf("Sin")) + sinResult + output.substring(closeSin + 1);

                }

                // Solves Cos
                if (output.indexOf("Cos") >= 0) {
                    int openCos = output.indexOf("Cos(") + 4;
                    int closeCos = output.indexOf(")");

                    String insideCos = output.substring(openCos, closeCos);

                    insideCos = insideCos.replaceAll("\\s", "");
                    double inCos = Double.parseDouble(insideCos);

                    double cosResult = cos(inCos);
                    output = output.substring(0, output.indexOf("Cos")) + cosResult + output.substring(closeCos + 1);
                }

                // solves Tan
                if (output.indexOf("Tan") >= 0) {
                    int openTan = output.indexOf("Tan(") + 4;
                    int closeTan = output.indexOf(")");

                    String insideTan = output.substring(openTan, closeTan);

                    insideTan = insideTan.replaceAll("\\s", "");
                    double inTan = Double.parseDouble(insideTan);

                    double tanResult = tan(inTan);
                    output = output.substring(0, output.indexOf("Tan")) + tanResult + output.substring(closeTan + 1);
                }

                // solves ArcSin
                if (output.indexOf("Arcsin") >= 0) {
                    int openArcSin = output.indexOf("Arcsin(") + 7;
                    int closeArcSin = output.indexOf(")");

                    String insideArcSin = output.substring(openArcSin, closeArcSin);

                    insideArcSin = insideArcSin.replaceAll("\\s", "");
                    double inArcSin = Double.parseDouble(insideArcSin);

                    double arcsinResult = arcSin(inArcSin);
                    //System.out.println("ArcSin is " + arcsinResult);
                    output = output.substring(0, output.indexOf("Arcsin")) + arcsinResult + output.substring(closeArcSin + 1);
                }

                // solves ArcCos
                if (output.indexOf("Arccos") >= 0) {
                    int openArcCos = output.indexOf("Arccos(") + 7;
                    int closeArcCos = output.indexOf(")");

                    String insideArcCos = output.substring(openArcCos, closeArcCos);

                    insideArcCos = insideArcCos.replaceAll("\\s", "");
                    double inArcCos = Double.parseDouble(insideArcCos);

                    double arccosResult = arcCos(inArcCos);
                    output = output.substring(0, output.indexOf("Arccos")) + arccosResult + output.substring(closeArcCos + 1);
                }

                // solves ArcTan
                if (output.indexOf("Arctan") >= 0) {
                    int openArcTan = output.indexOf("Arctan(") + 7;
                    int closeArcTan = output.indexOf(")");

                    String insideArcTan = output.substring(openArcTan, closeArcTan);

                    insideArcTan = insideArcTan.replaceAll("\\s", "");
                    double inArcTan = Double.parseDouble(insideArcTan);

                    double arctanResult = arcTan(inArcTan);
                    output = output.substring(0, output.indexOf("Arctan")) + arctanResult + output.substring(closeArcTan + 1);
                }
                
                // We've done ||, Sqrt, and Trig
                // Now do rest of () stuff like 3 * (4) and (3) * (4)    
                //WE DON"T DO (4)^2  WE ALWAYS DO (4^2)
                
                //get rid of ()
                
                while(output.contains("(")){
                    int indexOpen = output.indexOf("(");
                    
                    output = output.substring(0, indexOpen) + output.substring(indexOpen + 1);
                }
                while(output.contains(")")){
                    int indexClose = output.indexOf(")");
                    
                    output = output.substring(0, indexClose) + output.substring(indexClose + 1);
                }
                
            }

            // now () and || is done, we do basics
            
            output = "" + solveInside(output);
        }

        // MAKE THE OUTPUT LOOK GOOD
        // textArea is only 45 characters long
        String spaces = "";

        for (int i = 0; i < 40 - output.length(); i++) {
            spaces += "  ";
        }

        output = spaces + output;
    }

    private double solveInside(String insideParen) {
        // Solves inside parenthese for basics ^, /, *, +, -

        Scanner scan = new Scanner(insideParen);

        String str1 = scan.next();
        
        String str2 = "";
        String str3 = "";
        String str4 = "";
        String str5 = "";

        double num1 = 0;
        String op1 = "";
        double num2 = 0;
        String op2 = "";
        double num3 = 0;
        String op3 = "";
        double num4 = 0;
        String op4 = "";
        double num5 = 0;

        // SETS OPERATORS AND NUMS
        if (str1.equals("Pi")) {
            num1 = Math.PI;
        } else {
            num1 = Double.parseDouble(str1);
        }
        
        if (scan.hasNext()) {
            op1 = scan.next();
        }
        
        if (scan.hasNext()) {
            str2 = scan.next();
            
            if(str2.equals("Pi")){
                num2 = Math.PI;
            } else {
                num2 = Double.parseDouble(str2);
            }
        }
        
        if (scan.hasNext()) {
            op2 = scan.next();
        }
        
        if (scan.hasNext()) {
            str3 = scan.next();
            
            if(str3.equals("Pi")){
                num3 = Math.PI;
            } else {
                num3 = Double.parseDouble(str3);
            }
        }
        
        if (scan.hasNext()) {
            op3 = scan.next();
        }
        
        if (scan.hasNext()) {
            str4 = scan.next();
            
            if(str4.equals("Pi")){
                num4 = Math.PI;
            } else {
                num4 = Double.parseDouble(str4);
            }
        }
        
        if (scan.hasNext()) {
            op4 = scan.next();
        }
        
        if (scan.hasNextDouble()) {
            str5 = scan.next();
            
            if(str5.equals("Pi")){
                num5 = Math.PI;
            } else {
                num5 = Double.parseDouble(str5);
            }
        }

        /*
        System.out.println(num1);
        System.out.println(op1);
        System.out.println(num2);
        System.out.println(op2);
        System.out.println(num3);
        System.out.println(op3);
        System.out.println(num4);
        System.out.println(op4);
        System.out.println(num5);
         */
        
        
        // operator 1    
        if (!op1.equals("")) {
            if (op1.equals("^")) {
                num2 = power(num1, num2);
            }
            if (op1.equals("%")) {
                num2 = mod(num1, num2);
            }
            if (op1.equals("/")) {
                num2 = div(num1, num2);
            }
            if (op1.equals("*")) {
                num2 = mult(num1, num2);
            }
            if (op1.equals("+")) {
                num2 = add(num1, num2);
            }
            if (op1.equals("-")) {
                num2 = sub(num1, num2);
            }

            if (op2.equals("")) {
                return num2;
            }
        }

        // operator 2
        if (!op2.equals("")) {
            if (op2.equals("^")) {
                num3 = power(num2, num3);
            }
            if (op2.equals("%")) {
                num3 = mod(num2, num3);
            }
            if (op2.equals("/")) {
                num3 = div(num2, num3);
            }
            if (op2.equals("*")) {
                num3 = mult(num2, num3);
            }
            if (op2.equals("+")) {
                num3 = add(num2, num3);
            }
            if (op2.equals("-")) {
                num3 = sub(num2, num3);
            }

            if (op3.equals("")) {
                return num3;
            }
        }

        // operator 3
        if (!op3.equals("")) {
            if (op3.equals("^")) {
                num4 = power(num3, num4);
            }
            if (op3.equals("%")) {
                num4 = mod(num3, num4);
            }
            if (op3.equals("/")) {
                num4 = div(num3, num4);
            }
            if (op3.equals("*")) {
                num4 = mult(num3, num4);
            }
            if (op3.equals("+")) {
                num4 = add(num3, num4);
            }
            if (op3.equals("-")) {
                num4 = sub(num3, num4);
            }

            if (op4.equals("")) {
                return num4;
            }
        }

        // operator 4
        if (!op4.equals("")) {
            if (op4.equals("^")) {
                num5 = power(num4, num5);
            }
            if (op4.equals("%")) {
                num5 = mod(num4, num5);
            }
            if (op4.equals("/")) {
                num5 = div(num4, num5);
            }
            if (op4.equals("*")) {
                num5 = mult(num4, num5);
            }
            if (op4.equals("+")) {
                num5 = add(num4, num5);
            }
            if (op4.equals("-")) {
                num5 = sub(num4, num5);
            }
            return num5;
        }

        return num1;
    }

    private double power(double n, double pow) {
        return Math.pow(n, pow);
    }

    private double absolute(double n) {
        return Math.abs(n);
    }

    private double squareRoot(double n) {
        return Math.sqrt(n);
    }

    private double sin(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.sin(num);
        }
        return Math.sin(n);
    }

    private double cos(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.cos(num);
        }
        return Math.cos(n);
    }

    private double tan(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.tan(num);
        }
        return Math.tan(n);
    }

    private double arcSin(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.asin(num);
        }
        return Math.asin(n);
    }

    private double arcCos(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.acos(num);
        }
        return Math.acos(n);
    }

    private double arcTan(double n) {
        if(degree){
            double num = Math.toRadians(n);
            return Math.atan(num);
        }
        return Math.atan(n);
    }

    private double add(double n, double n2) {
        return n + n2;
    }

    private double sub(double n, double n2) {
        return n - n2;
    }

    private double mult(double n, double n2) {
        return n * n2;
    }

    private double div(double n, double n2) {
        return n / n2;
    }

    private double mod(double n, double n2) {
        return n % n2;
    }

}
